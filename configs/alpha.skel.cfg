#
# Specify the points within the skeleton.
# Points should come either as single elements, or as left/right pairs,
# If points are supplied as left/right pairs then the fusion algorithm
# will have extra information for resolving possible left/right swaps
#
# Each point should have a name, and the 0-indexed id from the detector.
#
points = (
             ( ("RIGHT_EAR", 16),     ("LEFT_EAR", 17) ),
             (   ("RIGHT_EYE", 14), ("LEFT_EYE", 15)   ),
             (             ("NOSE", 0 )                ),
             (             ("NECK", 1 )                ),
             (   ("RIGHT_SHO",  2), ("LEFT_SHO",  5)   ),
             ( ("RIGHT_ELBOW",  3), ("LEFT_ELBOW",  6) ),
             ( ("RIGHT_WRIST",  4), ("LEFT_WRIST",  7) ),

             (   ("RIGHT_HIP",  8), ("LEFT_HIP",  11)   ),
             (  ("RIGHT_KNEE",  9), ("LEFT_KNEE", 12)  ),
             ( ("RIGHT_ANKLE", 10), ("LEFT_ANKLE", 13) ),
         );

#
# Using the keypoint name, indicate the _parent_ of the joint. If it 
# has no parent, then it should have _itself_ as its parent.
#
hierarchy = (
              ( "RIGHT_EAR",     "RIGHT_EYE"), ( "LEFT_EAR",     "LEFT_EYE"),
              ( "RIGHT_EYE",          "NOSE"), ( "LEFT_EYE",         "NOSE"),
                                    (  "NOSE", "NECK"  ),
                                    (  "NECK", "NECK"  ),
              ( "RIGHT_SHO",          "NECK"), ( "LEFT_SHO",         "NECK"),
              ( "RIGHT_ELBOW",   "RIGHT_SHO"), ( "LEFT_ELBOW",   "LEFT_SHO"),
              ( "RIGHT_WRIST", "RIGHT_ELBOW"), ( "LEFT_WRIST", "LEFT_ELBOW"),


                                    
              ( "RIGHT_HIP",          "NECK"), ( "LEFT_HIP",        "NECK"),
              ( "RIGHT_KNEE",    "RIGHT_HIP"), ( "LEFT_KNEE",   "LEFT_HIP"),
              ( "RIGHT_ANKLE",  "RIGHT_KNEE"), ( "LEFT_ANKLE", "LEFT_KNEE"),
              
            ); 
